{"componentChunkName":"component---src-templates-blog-post-js","path":"/with-graphql-now/","webpackCompilationHash":"70ecb58e0bd2ee025595","result":{"data":{"site":{"siteMetadata":{"title":"Program It Forward","author":"joselevelsup"}},"markdownRemark":{"id":"101743a9-87b8-5863-9d8b-bf2903977f1e","excerpt":"GraphQL: But I don’t want to learn another Database No no no…just no. GraphQL is just a Querying Langauge. Thats all. According to GraphQL’s site, “GraphQL is a…","html":"<h1>GraphQL: But I don’t want to learn another Database</h1>\n<p>No no no…just no. GraphQL is just a Querying Langauge. Thats all. According to <a href=\"https://graphql.org/\">GraphQL’s site</a>, “GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.”\nYou might be thinking, “Why should I learn this?” Well to put it simple programmer’s terms, “more data, less work”. So with that, let me just show you the basics. </p>\n<h2>The basics</h2>\n<p>Alright maggots, This is bootcamp! So I better see your querying faces! Just kidding. Ok, So lets say I am making a simple API for publishing company and they just want to list a Book and its Author. That’s it.\nLets setup my models:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">Book<span class=\"token punctuation\">:</span>\ntitle<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\npublishedAt<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">;</span>\nauthor<span class=\"token punctuation\">:</span> AuthorReference <span class=\"token comment\">//Can be an ID</span>\n\nAuthor<span class=\"token punctuation\">:</span> \nname<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\nstartedAt<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">;</span>\nbooksPublished<span class=\"token punctuation\">:</span> BookReference<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// Array of BookReferences</span></code></pre></div>\n<p>So it’s really easy to translate it to GraphQL. To start a model, you have to make a <code class=\"language-text\">type</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Book</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n\t<span class=\"token attr-name\">publishedAt</span><span class=\"token punctuation\">:</span> Date\n\t<span class=\"token attr-name\">author</span><span class=\"token punctuation\">:</span> Author<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Author</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n\t<span class=\"token attr-name\">startedAt</span><span class=\"token punctuation\">:</span> Date\n\t<span class=\"token attr-name\">booksPublished</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Book<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lets run  through it. The <code class=\"language-text\">type</code> is just the model that we are making. For instance, we created 2 models. One for Books and one for Authors. Now we have to declare each field  with data type and if you noticed, they are all in caps. Another point you might notice is that there are some data types with a <code class=\"language-text\">!</code> that is to tell GraphQL that this field is required. As for <code class=\"language-text\">booksPublished</code>, you can see that its referencing the Book type also its wrapped around square brackets. That just means we want an array  of the data type. </p>\n<h3>List of Data types in GraphQL</h3>\n<p>So  we aren’t confused going on, I’ll provide a list of Data types in GraphQL: </p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">GameProfile</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># can be what ever name. It is similar to the setup of your model</span>\n\n\t<span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String <span class=\"token comment\"># string data type but not required.</span>\n\n\t<span class=\"token attr-name\">nickname</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span> <span class=\"token comment\"># string data type and required.</span>\n\n\t<span class=\"token attr-name\">age</span><span class=\"token punctuation\">:</span> Int <span class=\"token comment\"># Integer data type.</span>\n\n\t<span class=\"token attr-name\">gamerscore</span><span class=\"token punctuation\">:</span> Float <span class=\"token comment\"># Float data type.</span>\n\n\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Query With GraphQL","date":"August 27, 2019","description":"Lets just jump into GraphQL..."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/with-graphql-now/","previous":{"fields":{"slug":"/editors-more-editors/"},"frontmatter":{"title":"Editors, Editors, and more Editors"}},"next":{"fields":{"slug":"/gitting-gud/"},"frontmatter":{"title":"Gitting Gud with Git"}}}}}