{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","Github","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","BlogImage","_public_static_d_3299874284_json__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","blogIcon","childImageSharp","Layout","children","style","marginLeft","marginRight","maxWidth","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"mLAMMA,kLACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACeC,KAAKC,aAAaC,MAEzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUL,MAAON,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKN,MAAM,mBACXC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yEATmBI,IAAMC,WAelBhB,YAER,IAAMiB,EAAS,+CCvBtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAIME,EAAa,IAAIC,IAAWC,KAOnBF,IACFP,EAASO,EAAWP,OACpBC,EAAQM,EAAWN,2BCbhC,IAAsBS,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAlB,EAAA,GAAAT,EAAAS,EAAAO,EAAAW,GAAAC,EAAAnB,EAAA,IAAAoB,EAAApB,EAAAO,EAAAY,GAAAnB,EAAAC,EAAAC,EAAA,sBAAAkB,EAAA5B,IAAAQ,EAAA,KAAAA,EAAA,GAcyBqB,QAAOC,QAELzB,IAAM0B,cAAc,+ECMhCC,UAjBU,SAAAC,GAAiC,IAA9B9B,EAA8B8B,EAA9B9B,SAAU+B,EAAoBD,EAApBC,cACpC,OAAKA,EAGE7B,IAAMJ,cAAckC,IAApBC,OAAAC,OAAA,CACLlC,WACA+B,iBACGA,EAAcI,OALV,gHCFX,IAAMC,EAAY,WACjB,IAAM5C,EAAI6C,EAAA7C,KAWV,OACC8C,EAAAzC,EAAAC,cAACyC,EAAA1C,EAAD,CAAO2C,MAAOhD,EAAKiD,SAASC,gBAAgBF,SAIxCG,kLACLvD,OAAA,WAAS,IACEwD,EAAatD,KAAKC,MAAlBqD,SACR,OACEN,EAAAzC,EAAAC,cAAA,OACE+C,MAAO,CACLC,WAAU,OACVC,YAAW,OACXC,SAAUxC,YAAO,IACjByC,QAAYzC,YAAO,KAAZ,IAAoBA,YAAO,OAGpC8B,EAAAzC,EAAAC,cAAA,cACHwC,EAAAzC,EAAAC,cAACoD,EAAA,EAAD,CAAMC,GAAE,KACPb,EAAAzC,EAAAC,cAACsC,EAAD,QAGEE,EAAAzC,EAAAC,cAAA,YAAO8C,QAjBM1C,IAAMC,WAuBZwC,qpBCjCf,SAASS,EAATtB,GAAiD,IAAlCuB,EAAkCvB,EAAlCuB,YAAaC,EAAqBxB,EAArBwB,KAAMC,EAAezB,EAAfyB,KAAM5D,EAASmC,EAATnC,MAC9BF,EADuC+D,EAAAhE,KACvCC,KAcFgE,EAAkBJ,GAAe5D,EAAKC,aAAa2D,YAEzD,OACEK,EAAA7D,EAAAC,cAAC6D,EAAA9D,EAAD,CACE+D,eAAgB,CACdN,QAEF3D,MAAOA,EACPkE,cAAa,QAAUpE,EAAKC,aAAaC,MACzC4D,KAAM,CACJ,CACEO,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASpE,GAEX,CACEqE,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAStE,EAAKC,aAAauE,QAE7B,CACEH,KAAI,gBACJC,QAASpE,GAEX,CACEmE,KAAI,sBACJC,QAASN,IAEXS,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-404-js-504d243b14a7e176606f.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\";\nimport Github from \"typography-theme-github\";\n\n\nconst typography = new Typography(Github)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\";\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogImage = () => {\n\tconst data = useStaticQuery(graphql`\n\t\t\tquery BlogImageQuery{\n\t\t\t\tblogIcon: file(absolutePath: { regex: \"/blogIcon.png/\"}) {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfixed(width: 800, height: 200){\n\t\t\t\t\t\t\t...GatsbyImageSharpFixed\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`)\n\treturn (\n\t\t<Image fixed={data.blogIcon.childImageSharp.fixed} />\n\t)\n}\n\nclass Layout extends React.Component {\n\trender() {\n    const { children } = this.props\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>\n\t\t\t\t\t<Link to={`/`}>\n\t\t\t\t\t\t<BlogImage />\n\t\t\t\t\t</Link>\n\t\t\t\t</header>\n        <main>{children}</main>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}